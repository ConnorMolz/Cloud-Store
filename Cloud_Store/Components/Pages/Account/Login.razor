@page "/login"
@using Cloud_Store.Models.ViewModels
@using Cloud_Store.Models.ViewModels
@using Cloud_Store.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <EditForm Model="@Model" OnValidSubmit="Authenticate" FormName="LoginForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center flex-column">
                <h3>LOGIN</h3>
            </div>
            <div class="mb-3">
                <label>Username</label>
                <InputText @bind-Value="Model.Username" class="form-control" placeholder="Username" />
                <ValidationMessage For="@(() => Model.Username)" />
            </div>
            <div class="mb-3">
                <label>Password</label>
                <InputText type="password" @bind-Value="Model.Password" class="form-control" placeholder="Password" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@_errorMessage</span>
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm] 
    public LoginViewModel Model { get; set; } = new();

    private string? _errorMessage;
    
    private async Task Authenticate()
    {
        var result = await AuthService.AuthenticateAsync(Model.Username, Model.Password);
        
        if (result)
        {
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            _errorMessage = "Invalid username or password";
        }
    }
}