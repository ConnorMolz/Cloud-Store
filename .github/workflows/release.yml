name: Build and Release

on:
  push:
    branches:
      - Repo-orga
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm
          - os: windows-latest
            rid: win-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: List solution and project files
        run: |
          ls *.sln
          find . -name "*.csproj"

      - name: Restore dependencies
        run: dotnet restore -r ${{ matrix.rid }}

      - name: Build and Publish
        run: |
          dotnet publish -c Release -r ${{ matrix.rid }} -f net9.0 --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=true
        working-directory: ./Cloud_Store

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.rid }}-build
          path: ./Cloud_Store/bin/Release/net9.0/${{ matrix.rid }}/publish/
          retention-days: 5

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/myapp:latest .

      - name: Push Docker image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}/myapp:latest

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false